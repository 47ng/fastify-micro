name: CI/CD

on:
  push:
  pull_request:
    types: [opened, edited, reopened, synchronize]

env:
  FORCE_COLOR: 3 # Diplay chalk colors

jobs:
  ci:
    name: Integration
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@e2f20e631ae6d7dd3b768f56a5d2af784dd54791
      - uses: pnpm/action-setup@c3b53f6a16e57305370b4ae5a540c2077a1d50dd
        with:
          version: 7
      - uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516
        with:
          node-version: lts/*
          cache: pnpm
      # Generate local TLS certificates to test HTTPS support, using mkcert:
      - name: Install dependencies
        run: pnpm install
      - name: Install & setup mkcert
        run: |
          sudo apt install libnss3-tools
          curl -JLO "https://dl.filippo.io/mkcert/latest?for=linux/amd64"
          chmod +x mkcert-v*-linux-amd64
          sudo cp mkcert-v*-linux-amd64 /usr/local/bin/mkcert
          echo "mkcert version: $(mkcert -version)"
          mkcert -install
      - name: Generate TLS certificates
        run: pnpm mkcert
      - name: Run integration tests
        run: pnpm ci
      - uses: coverallsapp/github-action@9ba913c152ae4be1327bfb9085dc806cedb44057
        name: Report code coverage
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: 47ng/actions-slack-notify@main
        name: Notify on Slack
        if: always()
        with:
          jobName: Integration
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  cd:
    name: Deployment
    runs-on: ubuntu-latest
    needs: [ci]
    if: ${{ github.ref_name == 'main' || github.ref_name == 'beta' || github.ref_name == 'alpha' }}
    steps:
      - uses: actions/checkout@e2f20e631ae6d7dd3b768f56a5d2af784dd54791
      - uses: pnpm/action-setup@c3b53f6a16e57305370b4ae5a540c2077a1d50dd
        with:
          version: 7
          run_install: |
            - args: [--frozen-lockfile]
            - args: [--global, sceau@beta]
      - uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516
        with:
          node-version: 16.x
          cache: pnpm
      - name: Install dependencies
        run: pnpm install --ignore-scripts --frozen-lockfile
      - name: Build package
        run: pnpm build
      - name: Sign package
        run: npx sceau sign
        env:
          SCEAU_BUILD_URL: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}
          SCEAU_SOURCE_URL: https://github.com/${{github.repository}}/commit/${{ github.sha }}
          SCEAU_PRIVATE_KEY: ${{ secrets.SCEAU_PRIVATE_KEY }}
      - uses: docker://ghcr.io/codfish/semantic-release-action@sha256:16ab6c16b1bff6bebdbcc6cfc07dfafff49d23c6818490500b8edb3babfff29e
        name: Semantic Release
        id: semantic
        with:
          branches: |
            [
              'main',
              {
                name: 'beta',
                prerelease: true
              },
              {
                name: 'alpha',
                prerelease: true
              }
            ]
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
